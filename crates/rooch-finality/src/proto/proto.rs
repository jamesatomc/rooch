// @generated
// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BlockInfo {
    /// block_hash is the hash of the block
    #[prost(string, tag="1")]
    pub block_hash: ::prost::alloc::string::String,
    /// block_height is the height of the block
    #[prost(uint64, tag="2")]
    pub block_height: u64,
    /// block_timestamp is the unix timestamp of the block
    #[prost(uint64, tag="3")]
    pub block_timestamp: u64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QueryIsBlockBabylonFinalizedRequest {
    #[prost(message, optional, tag="1")]
    pub block: ::core::option::Option<BlockInfo>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QueryBlockRangeBabylonFinalizedRequest {
    /// blocks is a list of blocks to query
    #[prost(message, repeated, tag="1")]
    pub blocks: ::prost::alloc::vec::Vec<BlockInfo>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct QueryBlockRangeBabylonFinalizedResponse {
    /// last_finalized_block_height is the height of the last finalized block
    #[prost(uint64, tag="1")]
    pub last_finalized_block_height: u64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct QueryBtcStakingActivatedTimestampRequest {
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct QueryBtcStakingActivatedTimestampResponse {
    /// timestamp is the unix timestamp when BTC staking was activated
    #[prost(uint64, tag="1")]
    pub activated_timestamp: u64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct QueryIsBlockFinalizedByHeightRequest {
    /// block_height is the height of the block
    #[prost(uint64, tag="1")]
    pub block_height: u64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QueryIsBlockFinalizedByHashRequest {
    /// block_hash is the hash of the block
    #[prost(string, tag="1")]
    pub block_hash: ::prost::alloc::string::String,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct QueryIsBlockFinalizedResponse {
    /// is_finalized is true if the block is finalized
    #[prost(bool, tag="1")]
    pub is_finalized: bool,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct QueryLatestFinalizedBlockRequest {
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QueryBlockResponse {
    #[prost(message, optional, tag="1")]
    pub block: ::core::option::Option<BlockInfo>,
}
include!("proto.tonic.rs");
// @@protoc_insertion_point(module)
